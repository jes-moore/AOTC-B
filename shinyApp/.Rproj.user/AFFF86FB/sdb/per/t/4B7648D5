{
    "collab_server" : "",
    "contents" : "library(tidyquant)\nlibrary(lubridate)\nlibrary(DT)\nlibrary(data.table)\nlibrary(scales)\nlibrary(finreportr)\nlibrary(XBRL)\nlibrary(curl)\nlibrary(RCurl)\n\n#################################################################################\n##################### Download Required files Example ############################\n#################################################################################\n\n\ngetRatios <- function(ticker){\n        tq_get(ticker,get='key.ratios')\n}\n#df.key.ratios <- getRatios(ticker)\n#profitability <- df.key.ratios$data[[2]]\n\n#Statistics (EPS,P/E,etc)\ngetStats <- function(ticker){\n        tq_get(ticker,get='key.stats',from='2014-01-01')\n}\n#df.stats <- getStats(ticker)\n\n#Financials\ngetFinancials <- function(ticker){\n        tq_get(ticker,get='financials')\n}\n\ngetFinancials2 <- function(ticker){\n        GetIncome(ticker,2017)\n}\n#df.financials <- getFinancials(ticker)\n\n#Function for merging many datasets\nmerge.all <- function(by, ...) {\n        frames <- list(...)\n        return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))\n}  \n\nQkeyFinancials <- function(df.financials,df.key.ratios,x) {\n        #Financials Yearly\n        df.Qfinancials <- df.financials$quarter\n        QincomeStatement <- na.exclude(df.Qfinancials[[3]])\n        \n        QRevenue <- QincomeStatement[QincomeStatement$category == 'Revenue',3:4]\n        colnames(QRevenue) <- c('Date','Revenue')\n        \n        QOpIncome <- QincomeStatement[QincomeStatement$category == 'Operating Income',3:4]\n        colnames(QOpIncome) <- c('Date','Operating Income')\n        \n        QNetProfit <- QincomeStatement[QincomeStatement$category == 'Net Income',3:4]\n        colnames(QNetProfit) <- c('Date','Net Profit')\n        \n        Qeps <- QincomeStatement[QincomeStatement$category == 'Diluted Normalized EPS',3:4]\n        colnames(Qeps) <- c('Date','Annualized EPS')\n        Qeps$`Annualized EPS` <- Qeps$`Annualized EPS` * 4\n        Qeps$`EPS QOQ (%)` <- 0\n        for(i in 1:nrow(Qeps)-1){\n                Qeps$`EPS QOQ (%)`[i] <- percent(round((Qeps$`Annualized EPS`[i] - Qeps$`Annualized EPS`[i+1])/Qeps$`Annualized EPS`[i+1],digits = 4))\n        }\n        \n        #Create P/E Based on Prices\n        QfinIndicators <-data.table(tail(merge.all(by = 1, QRevenue, QOpIncome, QNetProfit,Qeps),4))\n        setkey(QfinIndicators,'Date')\n        setkey(x,'date')\n        QfinIndicators <- x[,c(1,5)][QfinIndicators, roll=Inf][,c(1,3:7,2)] ## perform rolling join\n        colnames(QfinIndicators)[1] <- 'Date'\n        colnames(QfinIndicators)[7] <- 'Price'\n        QfinIndicators$`P/E` <- QfinIndicators$Price / QfinIndicators$`Annualized EPS`\n        \n        #Format For Display\n        QfinIndicators$`Net Profit` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(QfinIndicators$`Net Profit` ,big.mark = ','),\"M</span>\")\n        QfinIndicators$`Annualized EPS` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(QfinIndicators$`Annualized EPS` ,big.mark = ','),\"</span>\")\n        QfinIndicators$`EPS QOQ (%)` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",QfinIndicators$`EPS QOQ (%)`,\"</span>\")\n        QfinIndicators$`Operating Income` <- paste0(\"<span style='font-family: sans-serif;text-align: center;font-size: 11px; text-decoration: none; color:#2F2F2F'>$\",format(QfinIndicators$`Operating Income`,big.mark = ','),\"M</span>\")\n        QfinIndicators$Revenue <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(QfinIndicators$Revenue,big.mark = ','),\"M</span>\")\n        QfinIndicators$`P/E` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",round(QfinIndicators$`P/E`,1),\"</span>\")\n        QfinIndicators$Date <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",QfinIndicators$Date,\"</span>\")\n        QfinIndicators$Price <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",QfinIndicators$Price,\"</span>\")\n        colnames(QfinIndicators) <- paste0('<span style=\"font-family: sans-serif;text-align: center; color:',c(\"#697068;\",\"#697068;\"),\"font-size:11px\",'\">',colnames(QfinIndicators),'</span>')\n        \n        datatable(QfinIndicators,escape = FALSE,\n                  options = list(autowidth=T,\n                                 order = list(list(0, 'des')),\n                                 columnDefs = list(list(className = 'dt-center', targets = 0:7)),\n                                 sDom  = '<\"top\">lrt<\"bottom\">ip',  \n                                 dom='ptl',\n                                 \"bLengthChange\" = FALSE,\n                                 \"bInfo\"=FALSE,\n                                 \"DataTables_Table_0_paginate\"=FALSE,\n                                 bPaginate = FALSE),\n                  rownames= FALSE\n                  \n                  \n        )\n}\n\n\nYkeyFinancials <- function(df.financials,df.key.ratios,x) {\n        #Financials Yearly\n        df.Yfinancials <- df.financials$annual\n        YincomeStatement <- na.exclude(df.Yfinancials[[3]])\n        \n        YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',3:4]\n        colnames(YRevenue) <- c('Date','Revenue')\n        YRevenue$Date <- year(YRevenue$Date)\n        YRevenue$Revenue <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(YRevenue$Revenue,big.mark = ','),\"M</span>\")\n        \n        YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]\n        colnames(YOpIncome) <- c('Date','Operating Income')\n        YOpIncome$Date <- year(YOpIncome$Date)\n        YOpIncome$`Operating Income` <- paste0(\"<span style='font-family: sans-serif;text-align: center;font-size: 11px; text-decoration: none; color:#2F2F2F'>$\",format(YOpIncome$`Operating Income`,big.mark = ','),\"M</span>\")\n        \n        YNetProfit <- YincomeStatement[YincomeStatement$category == 'Net Income',3:4]\n        colnames(YNetProfit) <- c('Date','Net Profit')\n        YNetProfit$Date <- year(YNetProfit$Date)\n        YNetProfit$`Net Profit` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(YNetProfit$`Net Profit` ,big.mark = ','),\"M</span>\")\n        \n        Yeps <- YincomeStatement[YincomeStatement$category == 'Diluted Normalized EPS',3:4]\n        colnames(Yeps) <- c('Date','EPS')\n        Yeps$`EPS YOY (%)` <- 0\n        for(i in 1:nrow(Yeps)-1){\n                Yeps$`EPS YOY (%)`[i] <- percent(round((Yeps$EPS[i] - Yeps$EPS[i+1])/Yeps$EPS[i+1],digits = 4))\n        }\n        Yeps$Date <- year(Yeps$Date)\n        Yeps$EPS <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>$\",format(Yeps$EPS ,big.mark = ','),\"</span>\")\n        Yeps$`EPS YOY (%)` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",Yeps$`EPS YOY (%)`,\"</span>\")\n        \n        Ype <- df.key.ratios$data[[7]]\n        Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',c(4,5)])\n        colnames(Ype) <- c('Date','P/E')\n        Ype$Date <- as.Date(gsub(pattern = '30',x = Ype$Date,replacement = '31'))\n        Ype$Date <- year(Ype$Date)\n        Ype$`P/E` <- round(Ype$`P/E`,digits = 1)\n        Ype$`P/E` <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",Ype$`P/E`,\"</span>\")\n        \n        YfinIndicators <-data.table(tail(merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype),3))\n        \n        \n        setkey(YfinIndicators,'Date')\n        dateMerge <- data.table('Date' = as.Date(paste(YfinIndicators$Date,'-12-31',sep='')))\n        setkey(dateMerge,'Date')\n        setkey(x,'date')\n        price <- x[,c(1,5)][dateMerge, roll=Inf] ## perform rolling join\n        colnames(price)[1] <- 'Date'\n        colnames(price)[2] <- 'Price'\n        price$Date <- year(price$Date)\n        YfinIndicators <- merge.all(by = 'Date',YfinIndicators,price)\n        YfinIndicators$Date <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",YfinIndicators$Date,\"</span>\")\n        YfinIndicators$Price <- paste0(\"<span style='font-family: sans-serif;font-size: 11px;text-align: center; text-decoration: none; color:#2F2F2F'>\",YfinIndicators$Price,\"</span>\")\n        colnames(YfinIndicators) <- paste0('<span style=\"font-family: sans-serif;text-align: center; color:',c(\"#697068;\",\"#697068;\"),\"font-size:11px\",'\">',colnames(YfinIndicators),'</span>')\n        YfinIndicators <- YfinIndicators[,c(1,2,3,4,5,6,8,7)]\n        datatable(YfinIndicators,escape = FALSE,\n                  options = list(autowidth=T,\n                                 order = list(list(0, 'des')),\n                                 columnDefs = list(list(className = 'dt-center', targets = 0:7)),\n                                 sDom  = '<\"top\">lrt<\"bottom\">ip',  \n                                 dom='ptl',\n                                 \"bLengthChange\" = FALSE,\n                                 \"bInfo\"=FALSE,\n                                 \"DataTables_Table_0_paginate\"=FALSE,\n                                 bPaginate = FALSE),\n                  rownames= FALSE\n                  \n                  \n        )\n}\n\n\n\n\n",
    "created" : 1497000590563.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2391622749",
    "id" : "4B7648D5",
    "lastKnownWriteTime" : 1497368243,
    "last_content_update" : 1497369701016,
    "path" : "~/Desktop/AOTC/shinyApp/finreports.R",
    "project_path" : "finreports.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}